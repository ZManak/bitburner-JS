//v1
function autocomplete(data, args) {
    return data.servers;
}
function scanServers(ns) {
    const servers = ["home"];
    for (let i = 0; i < servers.length; i++) {
        const thisScan = ns.scan(servers[i]);
        for (let j = 0; j < thisScan.length; j++) {
            if (servers.indexOf(thisScan[j]) === -1) {
                servers.push(thisScan[j]);
            }
        }
    }
    return servers;
}
function overKill(ns, servers) {
    for (const i in servers) {
        ns.killall(servers[i]);
        ns.tprint("All scripts killed in " + servers[i]);
    }
}
function upgradeRam(ns) {
    try {
        ns.tprint("Spendind " + ns.formatNumber(ns.singularity.getUpgradeHomeRamCost()));
        ns.singularity.upgradeHomeRam();
        ns.tprint("Upgraded RAM to " + ns.getServer().maxRam);
        ns.tprint("Next upgrade will be " +
            ns.formatNumber(ns.singularity.getUpgradeHomeRamCost()));
    }
    catch (e) {
        ns.tprint(e);
    }
}
function upgradeCores(ns) {
    try {
        ns.singularity.upgradeHomeCores();
        ns.tprint("Upgraded Cores --> " + ns.getServer().cpuCores);
        ns.tprint("Next Upgrade --> " + ns.singularity.getUpgradeHomeCoresCost());
    }
    catch (e) {
        ns.tprint(e);
    }
}
export { scanServers, overKill, autocomplete, upgradeRam, upgradeCores };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLElBQUk7QUFDSixTQUFTLFlBQVksQ0FBQyxJQUFTLEVBQUUsSUFBWTtJQUMzQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7QUFDdEIsQ0FBQztBQUVELFNBQVMsV0FBVyxDQUFDLEVBQU07SUFDekIsTUFBTSxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN6QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN2QyxNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hDLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDdkMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUMzQjtTQUNGO0tBQ0Y7SUFDRCxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsRUFBTSxFQUFFLE9BQWlCO0lBQ3pDLEtBQUssTUFBTSxDQUFDLElBQUksT0FBTyxFQUFFO1FBQ3ZCLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkIsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNsRDtBQUNILENBQUM7QUFFRCxTQUFTLFVBQVUsQ0FBQyxFQUFNO0lBQ3hCLElBQUk7UUFDRixFQUFFLENBQUMsTUFBTSxDQUNQLFdBQVcsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxDQUN0RSxDQUFDO1FBQ0YsRUFBRSxDQUFDLFdBQVcsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUNoQyxFQUFFLENBQUMsTUFBTSxDQUFDLGtCQUFrQixHQUFHLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0RCxFQUFFLENBQUMsTUFBTSxDQUNQLHVCQUF1QjtZQUNyQixFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxDQUMxRCxDQUFDO0tBQ0g7SUFBQyxPQUFPLENBQUMsRUFBRTtRQUNWLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDZDtBQUNILENBQUM7QUFFRCxTQUFTLFlBQVksQ0FBQyxFQUFNO0lBQzFCLElBQUk7UUFDRixFQUFFLENBQUMsV0FBVyxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDbEMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsR0FBRyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0QsRUFBRSxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLHVCQUF1QixFQUFFLENBQUMsQ0FBQztLQUMzRTtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNkO0FBQ0gsQ0FBQztBQUVELE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLENBQUMifQ==